{"ast":null,"code":"var _jsxFileName = \"/home/matb/UISOLAR/solar-ui/src/components/LoadTable.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editable = () => {\n  _s();\n\n  const {\n    useState\n  } = React;\n  const [columns, setColumns] = useState([{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Surname',\n    field: 'surname',\n    initialEditValue: 'initial edit value'\n  }, {\n    title: 'Birth Year',\n    field: 'birthYear',\n    type: 'numeric'\n  }, {\n    title: 'Birth Place',\n    field: 'birthCity',\n    lookup: {\n      34: 'İstanbul',\n      63: 'Şanlıurfa'\n    }\n  }]);\n  const [data, setData] = useState([{\n    name: 'Mehmet',\n    surname: 'Baran',\n    birthYear: 1987,\n    birthCity: 63\n  }, {\n    name: 'Zerya Betül',\n    surname: 'Baran',\n    birthYear: 2017,\n    birthCity: 34\n  }]);\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Editable Preview\",\n    columns: columns,\n    data: data,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setData([...data, newData]);\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setData([...dataUpdate]);\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...data];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setData([...dataDelete]);\n          resolve();\n        }, 1000);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Editable, \"XPTIpp0DiBc8KPV2UFhj6fa9Tt4=\");\n\n_c = Editable;\nexport default Editable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editable\");","map":{"version":3,"sources":["/home/matb/UISOLAR/solar-ui/src/components/LoadTable.jsx"],"names":["React","MaterialTable","Editable","useState","columns","setColumns","title","field","initialEditValue","type","lookup","data","setData","name","surname","birthYear","birthCity","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\n\nconst Editable=() =>{\n    const { useState } = React;\n  \n    const [columns, setColumns] = useState([\n      { title: 'Name', field: 'name' },\n      { title: 'Surname', field: 'surname', initialEditValue: 'initial edit value' },\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      },\n    ]);\n  \n    const [data, setData] = useState([\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n      { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n    ]);\n  \n    return (\n      <MaterialTable\n        title=\"Editable Preview\"\n        columns={columns}\n        data={data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                setData([...data, newData]);\n                \n                resolve();\n              }, 1000)\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n  \n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                \n                resolve()\n              }, 1000)\n            }),\n        }}\n      />\n    )\n  }\n\n  export default Editable;\n\n"]},"metadata":{},"sourceType":"module"}